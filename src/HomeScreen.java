import java.util.ArrayList;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 343330528
 */
public class HomeScreen extends javax.swing.JFrame {
    //Global variables
    public static User currentUser; //Current user account that is being displayed and interacted with
    
    
    //Define methods
    
    /**
     * This method iterates through all of the previously set setting objects (game/search engine/social media) of the currently 
     * logged in user account and adds each settings object to each of the three corresponding history combo boxes in their 
     * respective frames
     * 
     * @param settingsArray  Instance variable of the current User object storing all of their previous setting configurations
     */
    public static void setHistoryComboBoxes(ArrayList<BasicSettings> settingsArray) {
        //Iterate through each BasicSettings object in the array list of BasicSettings
        for (BasicSettings settings : settingsArray) {
            //Check if the BasicSettings object's instance type is GameSettings so that it can downcast
            if (settings instanceof GameSettings)
                //Downcast BasicSettings object to GameSettings object, add to game settings history combo box in game settings history frame
                new GameSettingsHistory().getGameHistoryComboBox().addItem((GameSettings) settings);
            //Check if the BasicSettings object's instance type is SearchEngineSettings so that it can downcast
            if (settings instanceof SearchEngineSettings)
                //Downcast BasicSettings object to SearchEngineSettings object, add to search engine settings history combo box in search engine settings history frame
                new SearchEngineSettingsHistory().getSearchEngineHistoryComboBox().addItem((SearchEngineSettings) settings);
            //Check if the BasicSettings object's instance type is SocalMediaSettings so that it can downcast
            if (settings instanceof SocialMediaSettings)
                //Downcast BasicSettings object to SocialMediaSettings object, add to social media settings history combo box in social media settings history frame
                new SocialMediaSettingsHistory().getSocialMediaHistoryComboBox().addItem((SocialMediaSettings) settings);
        } //End for loop iterating through array list of settings objects
    }
    
    
    /**
     * Creates new form HomeScreen
     */
    public HomeScreen() {
        initComponents();
        
        //Set top label to display logged-in account's username
        usernameLabel.setText(currentUser.getUsername() + "'s Account");
        //Set email label to display logged-in account's email
        emailLabel.setText("Email: " + currentUser.getEmail());
        //Check if user entered their birthday when they created an account (value is not default 0)
        if (currentUser.getBirthday().getMonth() != 0)
            //Set birthday label to display logged-in account's birthday
            birthdayLabel.setText("Birthday: " + currentUser.getBirthday());
        //If user did not enter their birthday
        else
            //Set birthday label to tell user they did not provide a birthday
            birthdayLabel.setText("Birthday: Not provided");
         //Check if user entered their phone number when they created an account (value is not default 000)
        if (!(currentUser.getPhoneNumber().equals("000")))
            //Set phone number label to display logged-in account's phone number
            phoneNumberLabel.setText("Phone Number: " + currentUser.getPhoneNumber());
        //If user did not enter their phone number
        else
            //Set phone number label to tell user they did not provide a phone number
            phoneNumberLabel.setText("Phone Number: Not provided");
        
        //Clear all items in settings history combo boxes before adding updated set of settings objects as items
        new GameSettingsHistory().getGameHistoryComboBox().removeAllItems(); //Clear game settings history
        new SearchEngineSettingsHistory().getSearchEngineHistoryComboBox(); //Clear search engine settings history
        new SocialMediaSettingsHistory().getSocialMediaHistoryComboBox(); //Clear social media settings history
        //Set items in combo boxes in the three settings history frames (game/search engine/social media)
        setHistoryComboBoxes(currentUser.getSettings());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameLabel = new javax.swing.JLabel();
        friendsButton = new javax.swing.JButton();
        passwordButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        emailLabel = new javax.swing.JLabel();
        birthdayLabel = new javax.swing.JLabel();
        phoneNumberLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        usernameLabel.setText("User's Account");

        friendsButton.setText("Friends");
        friendsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friendsButtonActionPerformed(evt);
            }
        });

        passwordButton.setText("Change Password");
        passwordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordButtonActionPerformed(evt);
            }
        });

        settingsButton.setText("Settings");
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        emailLabel.setText("Email: ");

        birthdayLabel.setText("Birthday; ");

        phoneNumberLabel.setText("Phone Number: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(usernameLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(birthdayLabel)
                            .addComponent(emailLabel)
                            .addComponent(phoneNumberLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 133, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(logoutButton)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(friendsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(settingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordButton))
                        .addGap(131, 131, 131))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(usernameLabel)
                .addGap(16, 16, 16)
                .addComponent(emailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(birthdayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phoneNumberLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(friendsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(settingsButton)
                .addGap(18, 18, 18)
                .addComponent(logoutButton)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void friendsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friendsButtonActionPerformed
        //Go to edit friends screen if user clicks on "Friends" button
        new EditFriends().setVisible(true); //Show edit friends screen frame
        this.setVisible(false); //Hide current frame (home screen)
    }//GEN-LAST:event_friendsButtonActionPerformed

    private void passwordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordButtonActionPerformed
        //Go to change password screen if user clicks on "Change Password" button
        new ChangePassword().setVisible(true); //Show change password screen frame
        this.setVisible(false); //Hide current frame (home screen)
    }//GEN-LAST:event_passwordButtonActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        //Go to home settings screen if user clicks on "Settings" button
        new Settings().setVisible(true); //Show settings screen frame
        this.setVisible(false); //Hide current frame (home screen)
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        //Go to login screen if user clicks on "Logout" button
        new Login().setVisible(true); //Show login screen frame
        this.setVisible(false); //Hide current frame (home screen)
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel birthdayLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JButton friendsButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton passwordButton;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JButton settingsButton;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
