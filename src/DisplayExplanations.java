/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *This class displays all explanation of all setting for Games, Social media, and Search Engine
 * @author Tina
 * @version 1.0
 * @since 2025-05-23
 */
public class DisplayExplanations extends javax.swing.JFrame {

    /**
     * Creates new form DisplayExplanations
     */
    public DisplayExplanations() {
        initComponents();
        
        //Set text for the first time the screen opens, display game settings explanation because it is the default selected item
        //Call method to get paragraph text explanation of current user game settings and display in text area
        Explanation.setText(HomeScreen.currentUser.getCurrentGameSettings().setExplanation());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        explanationsComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        Explanation = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        returnButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        explanationsComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        explanationsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Game Settings", "Search Engine Settings", "Social Media Settings" }));
        explanationsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                explanationsComboBoxActionPerformed(evt);
            }
        });

        Explanation.setColumns(20);
        Explanation.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        Explanation.setLineWrap(true);
        Explanation.setRows(5);
        Explanation.setWrapStyleWord(true);
        jScrollPane2.setViewportView(Explanation);

        jLabel1.setFont(new java.awt.Font("Gurmukhi MT", 0, 18)); // NOI18N
        jLabel1.setText("Settings Explanation");

        returnButton.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(returnButton)
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(explanationsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 95, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(explanationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(returnButton)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void explanationsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_explanationsComboBoxActionPerformed
        //Check if the item selected in the combo box is Game Settings
        if(explanationsComboBox.getSelectedItem().equals("Game Settings")){
            //Call method to get paragraph text explanation of current user game settings and display in text area
            Explanation.setText(HomeScreen.currentUser.getCurrentGameSettings().setExplanation());
        //Check if the item selected in the combo box is Search Engine Settings
        }else if(explanationsComboBox.getSelectedItem().equals("Search Engine Settings")){
            //Call method to get paragraph text explanation of current user search engine settings and display in text area
            Explanation.setText(HomeScreen.currentUser.getCurrentSearchEngineSettings().setExplanation());
        //Check if the item selected in the combo box is Social Media Settings
        }else if(explanationsComboBox.getSelectedItem().equals("Social Media Settings")){
            //Call method to get paragraph text explanation of current user social media settings and display in text area
            Explanation.setText(HomeScreen.currentUser.getCurrentSocialMediaSettings().setExplanation());
        } //End if statement checking which type of settings explanation to display
        
    }//GEN-LAST:event_explanationsComboBoxActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        //Return to settings screen after user finishes looking at settings explanations
        new SettingsScreen().setVisible(true); //Show settings screen frame
        this.setVisible(false); //Hide current frame (settings explanations)
    }//GEN-LAST:event_returnButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayExplanations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayExplanations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayExplanations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayExplanations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayExplanations().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Explanation;
    private javax.swing.JComboBox<String> explanationsComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton returnButton;
    // End of variables declaration//GEN-END:variables
}
