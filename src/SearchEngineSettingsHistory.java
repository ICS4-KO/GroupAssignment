import javax.swing.JComboBox;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 343330528
 */
public class SearchEngineSettingsHistory extends javax.swing.JFrame {
    //Define methods
    
    /**
     * This method returns the combo box of all previous search engine history settings set by the user so that items can be added to
     * it in a different JFrame (UserSearchEngineSettings.java)
     * 
     * @return  Returns combo box of SearchEngineSettings objects storing history of user's search engine settings
     */
    public JComboBox<SearchEngineSettings> getSearchEngineHistoryComboBox() {
            return searchEngineHistoryComboBox;
    }

    /**
     * Creates new form SearchEngineSettingsHistory
     */
    public SearchEngineSettingsHistory() {
        initComponents();
        
        //Set top label to display logged-in account's username
        usernameLabel.setText(HomeScreen.currentUser.getUsername() + "'s Search Engine Settings History");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchEngineHistoryComboBox = new javax.swing.JComboBox<>();
        usernameLabel = new javax.swing.JLabel();
        notificationsLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        microphoneLabel = new javax.swing.JLabel();
        trackHistoryLabel = new javax.swing.JLabel();
        adPersonalizationLabel = new javax.swing.JLabel();
        safeBrowsingLabel = new javax.swing.JLabel();
        resultsPerPageLabel = new javax.swing.JLabel();
        returnButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchEngineHistoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEngineHistoryComboBoxActionPerformed(evt);
            }
        });

        usernameLabel.setText("User's Search Engine Settings History");

        notificationsLabel.setText("Notifications:");

        locationLabel.setText("Location:");

        microphoneLabel.setText("Microphone:");

        trackHistoryLabel.setText("Track History:");

        adPersonalizationLabel.setText("Ad Personalization:");

        safeBrowsingLabel.setText("Safe Browsing:");

        resultsPerPageLabel.setText("Results per Page:");

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(usernameLabel)
                .addGap(119, 119, 119))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(returnButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(105, 105, 105)
                            .addComponent(searchEngineHistoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(locationLabel)
                                .addComponent(notificationsLabel)
                                .addComponent(microphoneLabel)
                                .addComponent(trackHistoryLabel)
                                .addComponent(adPersonalizationLabel)
                                .addComponent(safeBrowsingLabel)
                                .addComponent(resultsPerPageLabel)))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchEngineHistoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(notificationsLabel)
                .addGap(18, 18, 18)
                .addComponent(locationLabel)
                .addGap(18, 18, 18)
                .addComponent(microphoneLabel)
                .addGap(52, 52, 52)
                .addComponent(trackHistoryLabel)
                .addGap(18, 18, 18)
                .addComponent(adPersonalizationLabel)
                .addGap(18, 18, 18)
                .addComponent(safeBrowsingLabel)
                .addGap(18, 18, 18)
                .addComponent(resultsPerPageLabel)
                .addGap(18, 18, 18)
                .addComponent(returnButton)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchEngineHistoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEngineHistoryComboBoxActionPerformed
        //Retrieve the current selected item (SearchEngineSettings object) from the combo box when the user clicks on an item
        SearchEngineSettings selectedSearchEngineSettingsVersion = (SearchEngineSettings) searchEngineHistoryComboBox.getSelectedItem();
        
        //Display the selected SearchEngineSettings object's notifications attribute in the corresponding text field
        notificationsLabel.setText("Notifications: " + selectedSearchEngineSettingsVersion.getAllowNotifications());
        //Display the selected SearchEngineSettings object's location sharing attribute in the corresponding text field
        locationLabel.setText("Location: " + selectedSearchEngineSettingsVersion.getLocationSharing());
        //Display the selected SearchEngineSettings object's microphone access attribute in the corresponding text field
        microphoneLabel.setText("Microphone: " + selectedSearchEngineSettingsVersion.getMicrophoneAccess());

        //Display the selected SearchEngineSettings object's track history attribute in the corresponding text field
        trackHistoryLabel.setText("Track History: " + selectedSearchEngineSettingsVersion.getTrackHistory());
        //Display the selected SearchEngineSettings object's ad personalization attribute in the corresponding text field
        adPersonalizationLabel.setText("Ad Personalization: " + selectedSearchEngineSettingsVersion.getAdPersonalization());
        //Display the selected SearchEngineSettings object's safe browsing attribute in the corresponding text field
        safeBrowsingLabel.setText("Safe Browsing: " + selectedSearchEngineSettingsVersion.getMicrophoneAccess());
        //Display the selected SearchEngineSettings object's results per page attribute in the corresponding text field
        resultsPerPageLabel.setText("Results per Page: " + selectedSearchEngineSettingsVersion.getResultsPerPage());
    }//GEN-LAST:event_searchEngineHistoryComboBoxActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        //Return to home screen after user finishes looking at previous game settings
        new HomeScreen().setVisible(true); //Show home screen frame
        this.setVisible(false); //Hide current frame (game settings history)
    }//GEN-LAST:event_returnButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchEngineSettingsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchEngineSettingsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchEngineSettingsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchEngineSettingsHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchEngineSettingsHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adPersonalizationLabel;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JLabel microphoneLabel;
    private javax.swing.JLabel notificationsLabel;
    private javax.swing.JLabel resultsPerPageLabel;
    private javax.swing.JButton returnButton;
    private javax.swing.JLabel safeBrowsingLabel;
    private javax.swing.JComboBox<SearchEngineSettings> searchEngineHistoryComboBox;
    private javax.swing.JLabel trackHistoryLabel;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
