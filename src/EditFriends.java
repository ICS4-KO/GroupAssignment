import java.util.ArrayList;
import javax.swing.DefaultListModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * Edit Friends screen in Settings Simulator app that allows users to add friends to and remove friends from their friends list
 * 
 * @author   Kimi Ong
 * @version  1.0
 * @since    2025-04-29
 */
public class EditFriends extends javax.swing.JFrame {
    //Declare variables
    private static ArrayList<String> updatedFriendsList = HomeScreen.currentUser.getFriendsList(); //List of user's friends (Strings)
    
    //Because friendsDisplay is declared as a JList<String>, internal model must be a DefaultListModel<String>
    //This supports methods like addElement() and allows items to be dynamically added to it 
    DefaultListModel<String> friendListModel = new DefaultListModel<>();
    
    /**
     * Creates new form Friends
     */
    public EditFriends() {
        initComponents();
        
        //Link JList to the model in order to add/remove display items
        friendsDisplay.setModel(friendListModel); 
        //Iterate through every friend (String) in the user's current array list of friends
        for (String friend : updatedFriendsList)
            friendListModel.addElement(friend); //Set up the display by adding each of the user's existing friends
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        friendsLabel = new javax.swing.JLabel();
        addFriendPrompt = new javax.swing.JLabel();
        removeFriendPrompt = new javax.swing.JLabel();
        editFriendInput = new javax.swing.JTextField();
        friendsScroll = new javax.swing.JScrollPane();
        friendsDisplay = new javax.swing.JList<>();
        addFriendButton = new javax.swing.JButton();
        removeFriendButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        friendName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        friendsLabel.setFont(new java.awt.Font("Gurmukhi MT", 0, 18)); // NOI18N
        friendsLabel.setText("Friends");

        addFriendPrompt.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        addFriendPrompt.setForeground(new java.awt.Color(0, 0, 153));
        addFriendPrompt.setText("Type in a name and click the button to add them as a friend.");

        removeFriendPrompt.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        removeFriendPrompt.setForeground(new java.awt.Color(0, 0, 153));
        removeFriendPrompt.setText("Select a friend in the list and click the button to remove them.");

        editFriendInput.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N

        friendsDisplay.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        friendsDisplay.setForeground(new java.awt.Color(0, 0, 153));
        friendsDisplay.setToolTipText("");
        friendsDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                friendsDisplayMouseClicked(evt);
            }
        });
        friendsScroll.setViewportView(friendsDisplay);

        addFriendButton.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        addFriendButton.setText("Add");
        addFriendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFriendButtonActionPerformed(evt);
            }
        });

        removeFriendButton.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        removeFriendButton.setText("Remove");
        removeFriendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFriendButtonActionPerformed(evt);
            }
        });

        returnButton.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        returnButton.setText("Return to Main Screen");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        friendName.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        friendName.setText("Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addFriendPrompt)
                        .addComponent(removeFriendPrompt)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(friendsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(friendName)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(editFriendInput, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(addFriendButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(removeFriendButton))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(returnButton)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(friendsLabel)))
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(friendsLabel)
                .addGap(18, 18, 18)
                .addComponent(addFriendPrompt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeFriendPrompt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editFriendInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(friendName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addFriendButton)
                            .addComponent(removeFriendButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnButton))
                    .addComponent(friendsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFriendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFriendButtonActionPerformed
        //Get friend username that was entered by the user in the add friend text field
        String friend = editFriendInput.getText();
        //If the user has entered a name, add it to the JList when they press the Add button
        if (!friend.isEmpty()) {
            updatedFriendsList.add(friend); //Add new friend to updated arraylist of friends
            friendListModel.addElement(friend); //Apdates the displayed JList
        } //End if statement checking if the input field is empty 
        
        //Clear input text field for friend that will be added/removed
        editFriendInput.setText("");
    }//GEN-LAST:event_addFriendButtonActionPerformed

    private void removeFriendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFriendButtonActionPerformed
        //Retrieve the index of the currently selected item in the displayed list of friends
        int index = friendsDisplay.getSelectedIndex();
        //Remove friend from arraylist of friends
        updatedFriendsList.remove(index);
        
        //Cast generic ListModel returned by getModel() to DefaultListModel in order to use methods edit the list (add/remove)
        DefaultListModel model = (DefaultListModel) friendsDisplay.getModel();
        //Remove currently selected friend in list based on the retrieved index
        model.removeElementAt(index);
        
        //Clear input text field for friend that will be added/removed
        editFriendInput.setText("");
    }//GEN-LAST:event_removeFriendButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        //Assign user's friend list instance variable to the friends array list that has been updated in this frame
        HomeScreen.currentUser.setFriendsList(updatedFriendsList);
        
        //Return to home screen after user finishes editing friends
        new HomeScreen().setVisible(true); //Show home screen frame
        this.setVisible(false); //Hide current frame (edit friends)
    }//GEN-LAST:event_returnButtonActionPerformed

    private void friendsDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendsDisplayMouseClicked
        //Get the value in the list that is currently selected by the user
        String selectedFriend = friendsDisplay.getSelectedValue();
        //Display selected value (friend username) in text field that displays a friend name to be added/removed
        editFriendInput.setText(selectedFriend);
    }//GEN-LAST:event_friendsDisplayMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditFriends.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditFriends.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditFriends.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditFriends.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditFriends().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFriendButton;
    private javax.swing.JLabel addFriendPrompt;
    private javax.swing.JTextField editFriendInput;
    private javax.swing.JLabel friendName;
    private javax.swing.JList<String> friendsDisplay;
    private javax.swing.JLabel friendsLabel;
    private javax.swing.JScrollPane friendsScroll;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeFriendButton;
    private javax.swing.JLabel removeFriendPrompt;
    private javax.swing.JButton returnButton;
    // End of variables declaration//GEN-END:variables
}
