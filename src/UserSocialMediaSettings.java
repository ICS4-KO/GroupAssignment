/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *A Social Media Settings screen that displays the current setting menu
 * @author Tina
 * @version 1.0
 * @since 2025-05-23
 */
public class UserSocialMediaSettings extends javax.swing.JFrame {
    //Declare Variables
    private static boolean allowNotifications; //Allow notifications from application
    private static boolean locationSharing; //Allow access to user's location
    private static boolean microphoneAccess; //Allow access to microphone
    private static boolean birthdayPrivacy; //Whether birthday is public or private
    private static boolean emailPrivacy; //Whether email is public or private
    private static boolean phoneNumberPrivacy; //Whether phone number is public or private
    private static boolean mentionsPrivacy; //Whether mentions are public or private
    private static boolean messagesPrivacy; //Whether messages are public or private
    private static boolean storiesPrivacy; //Whether email are public or private

    /**
     * Creates new form UserSocialMediaSettings
     */
    public UserSocialMediaSettings() {
        initComponents();
        
        //Set top label to display logged-in account's username
        usernameLabel.setText(HomeScreen.currentUser.getUsername() + "'s Social Media Settings");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        notificationsComboBox = new javax.swing.JComboBox<>();
        locationComboBox = new javax.swing.JComboBox<>();
        microphoneComboBox = new javax.swing.JComboBox<>();
        birthdayComboBox = new javax.swing.JComboBox<>();
        emailComboBox = new javax.swing.JComboBox<>();
        phoneNumberComboBox = new javax.swing.JComboBox<>();
        mentionsComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        messagesComboBox = new javax.swing.JComboBox<>();
        storiesComboBox = new javax.swing.JComboBox<>();
        submitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        usernameLabel.setFont(new java.awt.Font("Gurmukhi MT", 0, 18)); // NOI18N
        usernameLabel.setText("User's Social Media Settings");

        jLabel3.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel3.setText("Notifications:");

        jLabel4.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel4.setText("Location:");

        jLabel5.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel5.setText("Microphone:");

        jLabel6.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel6.setText("Email:");

        jLabel7.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel7.setText("Phone Number:");

        jLabel8.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel8.setText("Mentions:");

        jLabel9.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel9.setText("Messages:");

        jLabel1.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel1.setText("Birthday:");

        notificationsComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        notificationsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allow", "Block" }));

        locationComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        locationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Share", "Hide" }));

        microphoneComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        microphoneComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allow", "Block" }));

        birthdayComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        birthdayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));

        emailComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        emailComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));

        phoneNumberComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        phoneNumberComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));

        mentionsComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        mentionsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));

        jLabel2.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        jLabel2.setText("Stories:");

        messagesComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        messagesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));

        storiesComboBox.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        storiesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Public", "Private" }));

        submitButton.setFont(new java.awt.Font("Hiragino Sans", 0, 12)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(storiesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(messagesComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(notificationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(microphoneComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(birthdayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(emailComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(phoneNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mentionsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGap(31, 31, 31))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(usernameLabel)
                            .addGap(23, 23, 23))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(usernameLabel)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(244, 244, 244))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(notificationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(microphoneComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(birthdayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mentionsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(messagesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storiesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(submitButton)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
               //Check the current selected item (String) in the notifications combo box when the user submits the settings
        if (notificationsComboBox.getSelectedItem().equals("Allow"))
            //If the selected option is "Allow", set variable to true
            allowNotifications = true;
        //If selected option is not "Allow", only other option is "Block"
        else
            //If the selected option is "Block", set variable to false
            allowNotifications = false; 
        
        //Check the current selected item (String) in the location combo box when the user submits the settings
        if (locationComboBox.getSelectedItem().equals("Share"))
            //If the selected option is "Share", set variable to true
            locationSharing = true;
        //If selected option is not "Share", only other option is "Hide"
        else
            //If the selected option is "Hide", set variable to false
            locationSharing = false; 
        
        //Check the current selected item (String) in the microphone combo box when the user submits the settings
        if (microphoneComboBox.getSelectedItem().equals("Allow"))
            //If the selected option is "Allow", set variable to true
            microphoneAccess = true;
        //If selected option is not "Allow", only other option is "Block"
        else
            //If the selected option is "Block", set variable to false
            microphoneAccess = false; 
        
        
        //Check the current selected item (boolean) in the birthday combo box when the user submits the settings
        if (birthdayComboBox.getSelectedItem().equals("Public")) 
            //If the selected option is "Public", store in variable
            birthdayPrivacy = true;
        //If the selected option is not "Public", only other option is "Private"
        else
            //If the selected option is "Private", store in variable
            birthdayPrivacy = false;
 
        //Check the current selected item (boolean) in the email combo box when the user submits the settings
        if (emailComboBox.getSelectedItem().equals("Public")) 
            //If the selected option is "Public", store in variable
            emailPrivacy = true;
        //If the selected option is not "Public", only other option is "Private"
        else
            //If the selected option is "Private", store in variable
            emailPrivacy = false;

        //Check the current selected item (boolean) in the phone number combo box when the user submits the settings
        if (phoneNumberComboBox.getSelectedItem().equals("Public")) 
            //If the selected option is "Public", store in variable
            phoneNumberPrivacy = true;
        //If the selected option is not "Public", only other option is "Private"
        else
            //If the selected option is "Private", store in variable
            phoneNumberPrivacy = false;

        //Check the current selected item (boolean) in the mentions combo box when the user submits the settings
        if (mentionsComboBox.getSelectedItem().equals("Public")) 
            //If the selected option is "Public", store in variable
            mentionsPrivacy = true;
        //If the selected option is not "Public", only other option is "Private"
        else
            //If the selected option is "Private", store in variable
            mentionsPrivacy = false;

        //Check the current selected item (boolean) in the messages combo box when the user submits the settings
        if (messagesComboBox.getSelectedItem().equals("Public")) 
            //If the selected option is "Public", store in variable
            messagesPrivacy = true;
        //If the selected option is not "Public", only other option is "Private"
        else
            //If the selected option is "Private", store in variable
            messagesPrivacy = false;

        //Check the current selected item (boolean) in the stories combo box when the user submits the settings
        if (storiesComboBox.getSelectedItem().equals("Public")) 
            //If the selected option is "Public", store in variable
            storiesPrivacy = true;
        //If the selected option is not "Public", only other option is "Private"
        else
            //If the selected option is "Private", store in variable
            storiesPrivacy = false;
       
        
        //Create new instance of SocialMediaSettings class based on settings selected by the user, upcast to BasicSettings
        BasicSettings socialMediaSettings = new SocialMediaSettings(allowNotifications, locationSharing, microphoneAccess, birthdayPrivacy, emailPrivacy, phoneNumberPrivacy, mentionsPrivacy, messagesPrivacy, storiesPrivacy);
        //Add new social media settings to user object's array list of all previously set settings
        HomeScreen.currentUser.addNewSettings(socialMediaSettings);
        
        //Set user's current social media settings to the newly set social media settings after downcasting
        HomeScreen.currentUser.setSocialMediaSettings((SocialMediaSettings) socialMediaSettings);
        
        
        //Return to settings screen after user finishes editing social media settings
        new SettingsScreen().setVisible(true); //Show settings screen frame
        this.setVisible(false); //Hide current frame (edit social media settings)
    }//GEN-LAST:event_submitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserSocialMediaSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserSocialMediaSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserSocialMediaSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserSocialMediaSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserSocialMediaSettings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> birthdayComboBox;
    private javax.swing.JComboBox<String> emailComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> locationComboBox;
    private javax.swing.JComboBox<String> mentionsComboBox;
    private javax.swing.JComboBox<String> messagesComboBox;
    private javax.swing.JComboBox<String> microphoneComboBox;
    private javax.swing.JComboBox<String> notificationsComboBox;
    private javax.swing.JComboBox<String> phoneNumberComboBox;
    private javax.swing.JComboBox<String> storiesComboBox;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
